pipeline {
    agent any
    environment {
        FTP_SERVER = 'ftp://52.66.250.18/'

    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    
                    bat "dotnet restore"

                    bat "dotnet build --configuration Release"
                }
            }
        }

        stage('Test') {
            steps {
                script {
                  
                    bat "dotnet test --no-restore --configuration Release"
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    
                    bat "dotnet publish --no-restore --configuration Release --output .\\publish"
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                   withCredentials([usernamePassword(credentialsId: 'user', usernameVariable: 'FTP_USER', passwordVariable: 'FTP_PASS')]) {
                    powershell '''
                         $ftpServer = "${env:FTP_SERVER}"
                        $ftpUser = "${env:FTP_USER}"
                        $ftpPass = "${env:FTP_PASS}"
                        $localFolder = ".\\publish\\"
                        
                        $files = Get-ChildItem -Path $localFolder -File
                        foreach ($file in $files) {
                            $fileName = $file.Name
                            $ftpUri = "$ftpServer$fileName"
                            $ftpRequest = [System.Net.FtpWebRequest]::Create($ftpUri)
                            $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile
                            $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($ftpUser, $ftpPass)
                            $ftpRequest.UseBinary = $true
                            $ftpRequest.UsePassive = $true
                            $ftpRequest.KeepAlive = $false

                          
                            $fileContent = [System.IO.File]::ReadAllBytes($file.FullName)

                            $requestStream = $ftpRequest.GetRequestStream()
                            $requestStream.Write($fileContent, 0, $fileContent.Length)
                            $requestStream.Close()

                            $ftpResponse = $ftpRequest.GetResponse()
                            Write-Host "Upload complete, status: $($ftpResponse.StatusDescription)"
                            $ftpResponse.Close()
                        }
                    '''
                    }
                }
            }
        }
      

    }

    post {
        success {
            echo 'Build, test, and publish successful!'
        }
    }
}
